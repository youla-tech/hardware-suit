/**
 * 套件配置表模块
 *
 * 主类型、子类型均为16机制值
 * <pre>
 *  object<string, string> type:  设备类型匹配表.
 *    设备分为主设备类型及子设备类型，主类型的key为主类型码，
 *    子类型由主类型码及子类型码组成key <br/>
 *
 *  object<string, string> status: 设备状态匹配表，
 *    分类主类型设备状态，及子类型设备状态，其中主类型状态key由主类型码+状态码组成，
 *    子设备类型状态key由主类型码+子类型码+状态码组成 <br/>
 *
 *  object<string, array> group: 设备类型分组，同组类型状态截码位相同<br/>
 * </pre>
 */
export const Suiter = {
  led: {
    /**
     * led.type 类
     */
    type: {
      '01': '灯',
      '0101': '单色灯',
      '0102': '双色灯', // 冷暖色调光，双色灯
      '0103': '三色光',
      '0111': '1路滑条调光',
      '0112': '2路滑条调光',
      '0113': '3路滑条调光',
      '0114': '4路滑条调光',
      '0115': '5路滑条调光',
      '0116': '6路滑条调光',
      '0119': '单 + 双',
      '0120': '单 + 三',
      // '0121': '双 + 三',
      // '0122': '单 + 双 + 三',
      '0121': '开关面板灯(1+3)',
      '0122': '开关面板灯(2+2)',
      '0123': '开关面板灯(3+1)',
      '0132': '单线供电调光器',
      '0133': '风扇灯'
    },
    /**
     * led.status 状态
     * 状态转移至 Equip
     */
    status: {
    },
    /**
     * led.group 状态分组
     */
    group: {
      root: ['01'],
      simple: ['01', '02'],
      color: ['01', '02', '03'], // x 色灯
      way: ['13'],
      // 单色灯
      plain: ['01'],
      // 双色灯
      bicolor: ['02'],
      // 三色灯
      tricolor: ['03'],
      // 1开关，3情景
      lampboard: ['21','22','23']
    },
    // 情景|开关
    typeIndex: {
      '0121': '3|1',
      '0122': '2|2',
      '0123': '1|3'
    },
  },
  /**
   * 电饭煲
   * @namespace Suiter.cooker
   */
  cooker: {
    // 电饭煲
    type: {
      '02': '智能电饭煲'
    }
  },
  /**
   * 加湿器
   * @namespace Suiter.humidifier
   */
  humidifier: {
    // 加湿器
    type: {
      '03': '智能加湿器'
    }
  },
  /**
   * 插座开关
   * @namespace Suiter.socketSwitch
   */
  socketSwitch: {
    // 插座开关
    type: {
      '04': '插座开关',
      // 智能插座
      '0401': '1路插座',
      // '0402': '单线开关'（停用）,
      // '0403': '触摸开关'（停用）,
      '0412': '2路插座',
      '0413': '3路插座',
      '0414': '4路插座',

      // 触摸开关
      '0421': '1路开关',
      '0422': '2路开关',
      '0423': '3路开关',
      '0424': '4路开关',
      '0425': '5路开关',
      '0426': '6路开关',
      // '0427': '触摸开关',
      '0428': '8路开关',

      // 情景开关
      '0431': '1路情景开关',
      '0432': '2路情景开关',
      '0433': '3路情景开关',
      '0434': '4路情景开关',
      '0436': '6键情景开关',

      // 混合开关
      '0441': '1路开关 + 3路情景',
      '0442': '2路开关 + 3路情景',
      '0443': '3路开关 + 3路情景',
      '0461': '1路开关 + 1路情景',
      '0462': '2路开关 + 2路情景',

      // 单线开关
      '0451': '1键单线开关',
      '0452': '2键单线开关',
      '0453': '3键单线开关',

      // 雷达开关
      '0471': '1路开关 + 雷达',
      '04101': '1路情景 + 雷达',

      // 红外
      '0480': '3路开关 + 红外面板',
      '0481': '1路开关 + 3路情景 + 红外面板',
      '0483': '3路开关 + 3路场景 + 红外面板',
      '0486': '6路情景 + 红外对管',

      '0490': 'WiFi插座',

      // 窗帘(情景类型)
      '0491': '2键窗帘面板',
      '0492': '4键窗帘面板',

      '04111': '2键开窗器',
      '04121': '4路情景 + 2调光调色',
      '04122': '可设置6键情景面板',
    },
    status: {
      '0400': '关',
      '0401': '开',
      '0410': '置反',
      '0411': '保持不变'
    },
    group: {
      // 类别分组， 状态取值区间相同，配置后会自动生成相应的判断方法
      root: ['04'],
      /** 可设置情景面板 */
      settableScene: ['122'],
      /** 插座开关 */
      plug: ['01', '12', '13', '14'],
      /** 触摸开关 */
      touch: ['21', '22', '23', '24', '25', '26', '28'],
      /** 情景开关 */
      scene: ['31', '32', '33', '34', '36'],
      /** @deprecated 混合面板 byte[1] */
      mix: ['41', '42', '43', '62', '83'],
      /** 混合面板 */
      mixup: ['41', '42', '43', '61', '62', '83'],
      /** 单线开关 */
      line: ['51', '52', '53'],
      /** 雷达开关 */
      radar: ['71', '101'],
      /** 窗帘开关 */
      curtain: ['91', '92'],

      /** x 路开关 | TODO 插座开关隔离 */
      xkey: ['21', '22', '23', '24', '31', '32', '33', '34', '36', '41', '42', '43', '62', '51', '52', '53', '01', '12', '13', '14', '80', '81', '83', '86', '91', '92'],

      /** 不设置按键名称的类型：情景开关、1个按键的开关、包含情景的一键开关 */
      dissetKey: ['01', '21', '31', '32', '33', '34', '36', '41', '51', '71', '101', '81', '91', '92']
    },
    /**
     * 设备类型索引类型： 一键开关 -> 1， 二建开关 -> 2 , 1路开关 + 3路情景面板 -> 1|3...，体现开关类型及对应类型开关的按键数量
     * 规则： 开关|情景|单线|插座|雷达|红外
     */
    typeIndex: {
      // 普通开关
      '0421': '1|',
      '0422': '2|',
      '0423': '3|',
      '0424': '4|',

      // 情景面板
      '0431': '|1',
      '0432': '|2',
      '0433': '|3',
      '0434': '|4',
      '0436': '|6',
      '04122': '|6',

      // 开关情景面板 约定格式： 普通开关|情景
      '0441': '1|3', // 开关|情景
      '0442': '2|3',
      '0443': '3|3',
      '0461': '1|1',
      '0462': '2|2',

      // 单线开关
      '0451': '||1',
      '0452': '||2',
      '0453': '||3',

      // 插座开关
      '0401': '|||1',
      '0412': '|||2',
      '0413': '|||3',
      '0414': '|||4',

      // 雷达
      '0471': '1||||1', // 开关 + 雷达
      '04101': '|1|||1', // 情景 + 雷达

      // 红外
      '0480': '3|||||1',  // 开关 + 红外
      '0481': '1|3||||1', // 开关 + 情景 + 红外
      '0483': '3|3||||1', // 开关 + 情景 + 红外
      '0486': '|6||||1', // 情景 + 红外

      // 窗帘面板, 情景按位（bit）取值
      '0491': '|3|||||1',
      '0492': '|6|||||1',
    }
  },
  /**
   * 智能开关
   * @namespace Suiter.smartSwitch
   */
  smartSwitch: {
    // 开关类设备
    type: {
      '05': '智能开关',
      '0501': '窗帘',
      '0502': '投影仪幕布'
    },
    group: {
      root: ['05'],
      curtain: ['01']
    },
    status: {
    }
  },
  // 电机类
  smartMotor: {
    type: {
      '23': '智能电机',
      '2301': 'DC窗帘', // 同智能窗帘
    },
    group: {
      root: ['05'],
      curtain: ['01']
    }
  },
  /**
   * 智能风扇
   * @namespace Suiter.fans
   */
  fans: {
    type: {
      '06': '智能风扇'
    }
  },
  /**
   * 智能空气净化器
   * @namespace Suiter.airCondition
   */
  airCondition: {
    type: {
      '07': '空调'
    }
  },
  tv: {
    type: {
      '08': '电视'
    }
  },
  usbRf: {
    type: {
      '09': '测试用USB_RF模块'
    }
  },
  gateway: {
    type: {
      '10': '网关',
      '1001': '通用版本',
      '1002': '阿里版本'
    }
  },
  sensors: {
    type: {
      '11': '传感器',
      '1101': '光明',
      '1102': '水浸',
      '1103': '雷达',
      '1104': 'CO',
      '1105': '环境（光湿温）',
      '1106': '人体感应（雷达+红外）',
      '1107': '空气质量（PM2.5+VOC）',
      '1108': '供电检测器',
      '1109': '虚拟雷达',
      '1110': '光线传感器',
      '1111': '温湿度传感器',
      '1112': '烟雾传感器',
      '1113': '超声波传感器',
      '1114': '雷达传感器',
      '1115': '插卡取电', // 插卡传感器
      '1116': '环境传感器',
      '1117': '感应面板',
      '1118': 'DC红外',
      '1119': 'AC红外',
      '1120': 'PM2.5',
      '1121': '门窗磁', // 门磁
      '1122': '雷达灯',
      '1123': 'DC人体+光感',
      '1124': 'AC人体+光感',
      '1125': '一键呼救传感器',
      '1126': '尿床传感器',
      '1127': '烟雾传感器',
      '1128': '燃气传感器',
      '1129': '插卡取电' // 插卡取电NFC
    },
    status: {
      // AC 红外
      '1100': '无人',
      '1101': '有人',
      // 插卡取电
      '11fe': '通电导通',
      '11fd': '断电',
      '11ff': '首次上电',
      '111500': '插卡',
      '111501': '拔卡',
      '111510': '断电',
      // 水浸
      '110200': '无异常',
      '110202': '无异常',
      '110201': '水浸警报',
      '112800': '无异常',
      '112802': '无异常',
      '112801': '燃气警报',
      '112700': '无异常',
      '112702': '无异常',
      '112701': '烟雾警报',
      '112600': '无异常',
      '112602': '无异常',
      '112601': '尿床警报',
      '112500': '无异常',
      '112502': '无异常',
      '112501': '呼救警报',
      '111900': '无人',
      '111901': '有人',
      '111902': '无人',
      '111903': '有人',
      '112400': '无人',
      '112401': '有人',
      '112300': '无人',
      '112301': '有人',
      '112302': '无人',
      '112303': '有人',
      '112100': '闭合',
      '112101': '打开',
      '112102': '闭合',
      '112103': '打开',
      // 插卡取电NFC
      '112900': '插卡',
      '112901': '拔卡',
      '112910': '断电',
    },
    group: {
      root: ['11'],
      als: ['01'],
      water: ['02'],
      radar: ['03'],
      co: ['04'],
      env: ['05'],
      body: ['06'],
      electric: ['08'],
      radarVirtual: ['09'],
      light: ['10'],
      humidifier: ['11'],
      smoke: ['12'],
      wave: ['13'],
      radarSence: ['14'],
      cardSense: ['15'],
      pluginPower: ['15', '29'],
      environment: ['16'],
      induction: ['17'],
      dc: '18',
      ac: ['19'],
      pm: ['20'],
      door: ['21'], // 门磁磁
      radarLight: ['22'],
      acman: ['23'], // ac + 光感
      dcman: ['24'], // dc + 光感
      acdcman: ['23', '24'],
      call: ['25'], // 一键呼叫
      bedwet: ['26'], // 尿床
      smog: ['27'], // 烟雾
      gas: ['28'], // 燃气
      // 检测类(协议一致)
      detect: ['02', '21', '25', '26', '27', '28']
    }
  },
  meterReader: {
    type: {
      '12': '智能抄表器',
      '1201': '智能抄表器'
    }
  },
  wireControl: {
    type: {
      '13': '线控面板',
      '1301': '空调线控器'
    },
    group: {
      root: ['11'],
      ac: ['01']
    },
    status: {
      '1300': '关',
      '1301': '开'
    }
  },
  transponder: {
    type: {
      '14': '红外转发器',
      '1401': '蓝牙',
      '1402': 'wifi',
      '1403': '红外线控面板'
    }
  },
  remoteControl: {
    type: {
      '15': '智能遥控设备',
      '1501': '手持单向遥控器'
    }
  },
  autoMover: {
    type: {
      '16': '智能自行设备',
      '1601': '飞机',
      '1602': '机械车'
    },
    group: {
      plane: ['01']
    }
  },
  camera: {
    type: {
      '17': '智能摄像类设备',
      '1701': '固定摄像设备（家用）',
      '1702': '防抖摄像设备（配合云台）'
    },
    group: {
      root: ['17'],
      fixed: ['01'],
      moving: ['02']
    }
  },
  finger: {
    type: {
      '16': '智能门禁，中控指纹机'
    }
  },
  doorLock: {
    type: {
      '21': '锁',
      '2101': '亚太天能智能门锁',
      '2102': '亿万家智能门锁',
      '2103': '家居门锁',
      '2104': '酒店门锁'
    },
    status: {
      '2100': '指纹开锁',
      '2101': '密码开锁',
      '2102': '卡开锁',
      '2103': '钥匙开锁',
      '2104': '遥控开锁',
      '2105': '临时用户开锁',
      '21-1': '关闭',
      '21open0': '指纹开锁',
      '21open1': '密码开锁',
      '21open2': '卡开锁',
      '21open3': '钥匙开锁',
      '21open4': '遥控开锁',
      '21open5': '临时用户开锁',
      '21close4': '反锁',
      '21close5': '门关闭',
      '21close7': '掩门',
      '21close8': '锁开',
      '21close9': '反锁开',
      '21card': '门卡开锁',
      default: '关门'
    },
    group: {
      root: ['21']
    }
  },
  remoteControlLamp: {
    type: {
      '22': '遥控灯',
      '2201': '遥控灯'
    }
  },
  smartCamera: {
    type: {
      '32': '摄像头'
    }
  },
  wifiSocket: {
    type: {
      '80': '单品wifi插座'
    }
  },
  wifiIr: {
    type: {
      '81': '红外转发器'
    }
  },
  infrared: {
    type: {
      '81': '红外转发器'
    }
  },
  obox: {
    type: {
      '10': 'obox',
      '1010': 'obox'
    },
    satus: {
      // device_type + status
      '100': '离线',
      '101': '在线'
    },
    group: {
      root: ['10']
    }
  }
};

/**
 * 套件类型
 */
export const SuitTypes = Array.from(Object.keys(Suiter)).reduce(
  // @ts-ignore
  (item, next, index) => {
    if (index === 1) {
      item = (Suiter as any)[item].type;
    }
    // @ts-ignore
    return { ...item, ...(Suiter as any)[next].type };
  }
);

/**
 * 套件状态，整合所有设备状态
 */
export const SuitStatus = Array.from(Object.keys(Suiter)).reduce(
  // @ts-ignore
  (item, next, index) => {
    if (index === 1) {
      item = (Suiter as any)[item].status;
    }
    // @ts-ignore
    return { ...item, ...(Suiter as any)[next].status };
  }
);

export default Suiter;
